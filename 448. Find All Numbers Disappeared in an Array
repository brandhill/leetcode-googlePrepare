// The basic idea is that we iterate through the input array and mark elements 
// as negative using nums[nums[i] -1] = -nums[nums[i]-1]. 
// In this way all the numbers that we have seen will be marked as negative. 
// In the second iteration, if a value is not marked as negative, it implies we have never seen that index before, 
// so just add it to the return list.
// 题：1-n的内容，有重复数字，数组长度为n。
class Solution {
    public List<Integer> findDisappearedNumbers(int[] nums) {
        List<Integer> result = new ArrayList<>();
        if (nums == null || nums.length == 0) {
            return result;
        }
        for (int i = 0; i < nums.length; i++) {
            int val = Math.abs(nums[i])-1;
            if (nums[val] > 0) {
                nums[val] = -nums[val];
            }
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > 0) {
                result.add(i+1);
            }
        }
        return result;
    }
}
