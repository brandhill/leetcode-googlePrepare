// my solucion, AC!
class Solution {
    public String reverseVowels(String s) {
        if (s == null || s.length() == 0) {
            return s;
        }
        int low = 0, high = s.length()-1;
        char[] s_char = s.toCharArray();
        while (low < high) {
            if ("aeiouAEIOU".contains(String.valueOf(s.charAt(low)))) {
                if ("aeiouAEIOU".contains(String.valueOf(s.charAt(high)))) {
                    char tmp = s_char[low];
                    s_char[low] = s_char[high];
                    s_char[high] = tmp;
                    low++;
                    high--;
                } else {
                    // wait high pointer find vowel
                    high--;
                }
            } else {
                // wait low pointer find vowel
                low++;
            }
        }
        return String.valueOf(s_char);
    }
}

// another solution:
因为我用的string.contains()方法，Java处理的慢，更快的:string.indexOf(s.charAt(i)) != -1, 意思是如果string含有这个字符
或者用set， set中有元音字母，set.contains(xx),逻辑不变
