followup:
basically there are three ideas to solve the question:

Store the two strings in distributed system(whether self designed or not), then using MapReduce technique to solve the problem;

Processing the Strings by chunk, which fits the memory, then deal with each chunk of data at a time;

Processing the Strings by streaming, then check.




class Solution {
    public int[] intersect(int[] nums1, int[] nums2) {
        if (nums1 == null || nums1.length == 0 || nums2 == null || nums2.length == 0) {
            return new int[0];
        }
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        int i = 0;
        int j = 0;
        List<Integer> res = new ArrayList<>();
        while (i < nums1.length && j < nums2.length) {
            if (nums1[i] < nums2[j]) {
                i++;
            } else if (nums1[i] > nums2[j]) {
                j++;
            } else {
                res.add(nums1[i]);
                i++;
                j++;
            }
        }
        int[] result = new int[res.size()];
        int k = 0;
        for (Integer num : res) {
            result[k++] = num;
        }
        return result;
    }
}
