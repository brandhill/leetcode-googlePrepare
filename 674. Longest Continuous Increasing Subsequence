//Space : O(1)
public int findLengthOfLCIS(int[] nums) {
        int res = 0, cnt = 0;
        for(int i = 0; i < nums.length; i++){
            if(i == 0 || nums[i-1] < nums[i]) res = Math.max(res, ++cnt);
            else cnt = 1;
        }
        return res;
}

// my solution: 1D dp, Space: O(n)
class Solution {
    public int findLengthOfLCIS(int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        int[] M = new int[nums.length];
        M[0] = 1;
        int max = 1;
        for (int i = 1; i < nums.length; i++) {
            if (nums[i-1] < nums[i]) {
                M[i] = M[i-1] + 1;
                max = Math.max(max, M[i]);
                System.out.println("max: " + max + ", i: " + i);
            } else {
                M[i] = 1;
                System.out.println("max in else: " + max + ", i: " + i);
            }
        }
        return max;
    }
}
