class Solution {
    public List<Integer> findClosestElements(int[] arr, int k, int x) {
        List<Integer> res = new ArrayList<>();
        if (arr == null || arr.length == 0) {
            return res;
        }
        // left: index of largest element <= target
		// right: left+1, 这两个是离target最近的
        int left = findIndex(arr, x);
        int right = left+1;
        
        // get K elements.
        for (int i = 0; i < k; i++) {
            // 1. right: out of bound
			// 2. no out of bound, array[left] is closer to target than right.
			// sorted array, 不需要abs
            if (right >= arr.length || left >= 0 && x-arr[left] <= arr[right]-x) {
                // add at the head, 这题要求sorted output.
                res.add(0, arr[left]);
                left--;
            } else {
                // add at the end
                res.add(arr[right]);
                right++;
            }    
        }
        return res;
    }
    private int findIndex(int[] arr, int target) {
        int low = 0, high = arr.length-1;
        while (low < high-1) {  // 提前一步停下来
            int mid = low + (high-low)/2;
            if (arr[mid] <= target) {
                low = mid;
            } else {
                high = mid;
            }
        }
        // for low == high-1,如果满足<=target，返回这个index (sorted array, high肯定比low离target更近)
        if (arr[high] <= target) {
            return high;
        }
        if (arr[low] <= target) {
            return low;
        }
        return -1;
    }
}
